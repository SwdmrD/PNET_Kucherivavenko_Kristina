@page "/review/delete/{Id:int}"
@inject LibraryFacade Facade
@inject NavigationManager NavigationManager
@using BlazorApp.Models
@rendermode InteractiveServer

<h3>Видалення рецензії</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        <p>@errorMessage</p>
    </div>
}

if (review == null)
{
    <div class="alert alert-warning">
        <p>Рецензію не знайдено</p>
        <button class="btn btn-secondary" @onclick="GoBack">Назад</button>
    </div>
}
else
{
    <div class="alert alert-danger">
        <h4>Ви впевнені, що хочете видалити цю рецензію?</h4>
        <p><strong>Книга:</strong> @review.Book?.Title</p>
        <p><strong>Користувач:</strong> @review.User?.UserName</p>
        <p><strong>Оцінка:</strong> @review.Rating</p>
        <div class="mt-3">
            <button class="btn btn-danger" @onclick="DeleteReview">Видалити</button>
            <button class="btn btn-secondary ms-2" @onclick="GoBack">Скасувати</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Review? review;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            review = await Facade.GetReviewById(Id);
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка завантаження даних: {ex.Message}";
        }
    }

    private async Task DeleteReview()
    {
        try
        {
            if (review != null)
            {
                await Facade.DeleteReview(Id);
                NavigationManager.NavigateTo("/reviews");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка видалення рецензії: {ex.Message}";
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/reviews");
    }
}