@page "/user/edit/{Id:int}"
@inject LibraryFacade Facade
@inject NavigationManager NavigationManager
@using BlazorApp.Models
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<h3>Редагувати користувача</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        <p>@errorMessage</p>
    </div>
}

<EditForm Model="@user" OnValidSubmit="UpdateUser" FormName="editUserForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Ім'я користувача</label>
        <InputText @bind-Value="user.UserName" class="form-control" />
        <ValidationMessage For="() => user.UserName" />
    </div>

    <div class="form-group mt-2">
        <label>Пароль</label>
        <InputText @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="() => user.Password" />
    </div>

    <div class="mt-3">
        <button class="btn btn-primary" type="submit">Зберегти</button>
        <button class="btn btn-secondary ms-2" @onclick="GoBack">Скасувати</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private User user = new User();
    private string? errorMessage;
    private string? originalUserName;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await Facade.GetUserById(Id) ?? new User();
            originalUserName = user.UserName; 
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка завантаження даних: {ex.Message}";
        }
    }

    private async Task UpdateUser()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(user.UserName))
            {
                errorMessage = "Логін є обов'язковим";
                return;
            }

             if (user.UserName != originalUserName)
            {
                var existingUser = await Facade.GetUserByUserName(user.UserName);
                if (existingUser != null)
                {
                    errorMessage = $"Юзер з логіном '{user.UserName}' вже існує.";
                    return;
                }
            }

            await Facade.UpdateUser(user);
            NavigationManager.NavigateTo("/users");
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка оновлення користувача: {ex.Message}";
            Console.WriteLine($"Помилка: {ex.Message}");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/users");
    }
}